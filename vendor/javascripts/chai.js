var e=Object.defineProperty;var t=Object.getOwnPropertyNames;var __name=(t,s)=>e(t,"name",{value:s,configurable:true});var __commonJS=(e,s)=>function __require(){return s||(0,e[t(e)[0]])((s={exports:{}}).exports,s),s.exports};var __export=(t,s)=>{for(var r in s)e(t,r,{get:s[r],enumerable:true})};var s=__commonJS({"(disabled):util"(){}});var r={};__export(r,{addChainableMethod:()=>addChainableMethod,addLengthGuard:()=>addLengthGuard,addMethod:()=>addMethod,addProperty:()=>addProperty,checkError:()=>n,compareByInspect:()=>compareByInspect,eql:()=>D,expectTypes:()=>expectTypes,flag:()=>flag,getActual:()=>getActual,getMessage:()=>getMessage2,getName:()=>getName,getOperator:()=>getOperator,getOwnEnumerableProperties:()=>getOwnEnumerableProperties,getOwnEnumerablePropertySymbols:()=>getOwnEnumerablePropertySymbols,getPathInfo:()=>getPathInfo,hasProperty:()=>hasProperty,inspect:()=>inspect2,isNaN:()=>B,isProxyEnabled:()=>isProxyEnabled,objDisplay:()=>objDisplay,overwriteChainableMethod:()=>overwriteChainableMethod,overwriteMethod:()=>overwriteMethod,overwriteProperty:()=>overwriteProperty,proxify:()=>proxify,test:()=>test,transferFlags:()=>transferFlags,type:()=>type});var n={};__export(n,{compatibleConstructor:()=>compatibleConstructor,compatibleInstance:()=>compatibleInstance,compatibleMessage:()=>compatibleMessage,getConstructorName:()=>getConstructorName,getMessage:()=>getMessage});function compatibleInstance(e,t){return t instanceof Error&&e===t}__name(compatibleInstance,"compatibleInstance");function compatibleConstructor(e,t){return t instanceof Error?e.constructor===t.constructor||e instanceof t.constructor:(t.prototype instanceof Error||t===Error)&&(e.constructor===t||e instanceof t)}__name(compatibleConstructor,"compatibleConstructor");function compatibleMessage(e,t){const s=typeof e==="string"?e:e.message;return t instanceof RegExp?t.test(s):typeof t==="string"&&s.indexOf(t)!==-1}__name(compatibleMessage,"compatibleMessage");function getConstructorName(e){let t=e;if(e instanceof Error)t=e.constructor.name;else if(typeof e==="function"){t=e.name;if(t===""){const s=(new e).name;t=s||t}}return t}__name(getConstructorName,"getConstructorName");function getMessage(e){let t="";e&&e.message?t=e.message:typeof e==="string"&&(t=e);return t}__name(getMessage,"getMessage");function flag(e,t,s){var r=e.__flags||(e.__flags=Object.create(null));if(arguments.length!==3)return r[t];r[t]=s}__name(flag,"flag");function test(e,t){var s=flag(e,"negate"),r=t[0];return s?!r:r}__name(test,"test");function type(e){if(typeof e==="undefined")return"undefined";if(e===null)return"null";const t=e[Symbol.toStringTag];if(typeof t==="string")return t;const s=Object.prototype.toString.call(e).slice(8,-1);return s}__name(type,"type");var o="captureStackTrace"in Error;var a=class extends Error{message;get name(){return"AssertionError"}get ok(){return false}constructor(e="Unspecified AssertionError",t,s){super(e);this.message=e;o&&Error.captureStackTrace(this,s||a);for(const e in t)e in this||(this[e]=t[e])}toJSON(e){return{...this,name:this.name,message:this.message,ok:false,stack:e!==false?this.stack:void 0}}};__name(a,"AssertionError");function expectTypes(e,t){var s=flag(e,"message");var r=flag(e,"ssfi");s=s?s+": ":"";e=flag(e,"object");t=t.map((function(e){return e.toLowerCase()}));t.sort();var n=t.map((function(e,s){var r=~["a","e","i","o","u"].indexOf(e.charAt(0))?"an":"a";var n=t.length>1&&s===t.length-1?"or ":"";return n+r+" "+e})).join(", ");var o=type(e).toLowerCase();if(!t.some((function(e){return o===e})))throw new a(s+"object tested must be "+n+", but "+o+" given",void 0,r)}__name(expectTypes,"expectTypes");function getActual(e,t){return t.length>4?t[4]:e._obj}__name(getActual,"getActual");var i={bold:["1","22"],dim:["2","22"],italic:["3","23"],underline:["4","24"],inverse:["7","27"],hidden:["8","28"],strike:["9","29"],black:["30","39"],red:["31","39"],green:["32","39"],yellow:["33","39"],blue:["34","39"],magenta:["35","39"],cyan:["36","39"],white:["37","39"],brightblack:["30;1","39"],brightred:["31;1","39"],brightgreen:["32;1","39"],brightyellow:["33;1","39"],brightblue:["34;1","39"],brightmagenta:["35;1","39"],brightcyan:["36;1","39"],brightwhite:["37;1","39"],grey:["90","39"]};var c={special:"cyan",number:"yellow",bigint:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",symbol:"green",date:"magenta",regexp:"red"};var u="â€¦";function colorise(e,t){const s=i[c[t]]||i[t]||"";return s?`[${s[0]}m${String(e)}[${s[1]}m`:String(e)}__name(colorise,"colorise");function normaliseOptions({showHidden:e=false,depth:t=2,colors:s=false,customInspect:r=true,showProxy:n=false,maxArrayLength:o=Infinity,breakLength:a=Infinity,seen:i=[],truncate:c=Infinity,stylize:u=String}={},l){const p={showHidden:Boolean(e),depth:Number(t),colors:Boolean(s),customInspect:Boolean(r),showProxy:Boolean(n),maxArrayLength:Number(o),breakLength:Number(a),truncate:Number(c),seen:i,inspect:l,stylize:u};p.colors&&(p.stylize=colorise);return p}__name(normaliseOptions,"normaliseOptions");function truncate(e,t,s=u){e=String(e);const r=s.length;const n=e.length;return r>t&&n>r?s:n>t&&n>r?`${e.slice(0,t-r)}${s}`:e}__name(truncate,"truncate");function inspectList(e,t,s,r=", "){s=s||t.inspect;const n=e.length;if(n===0)return"";const o=t.truncate;let a="";let i="";let c="";for(let l=0;l<n;l+=1){const n=l+1===e.length;const p=l+2===e.length;c=`${u}(${e.length-l})`;const h=e[l];t.truncate=o-a.length-(n?0:r.length);const f=i||s(h,t)+(n?"":r);const d=a.length+f.length;const y=d+c.length;if(n&&d>o&&a.length+c.length<=o)break;if(!n&&!p&&y>o)break;i=n?"":s(e[l+1],t)+(p?"":r);if(!n&&p&&y>o&&d+i.length>o)break;a+=f;if(!n&&!p&&d+i.length>=o){c=`${u}(${e.length-l-1})`;break}c=""}return`${a}${c}`}__name(inspectList,"inspectList");function quoteComplexKey(e){return e.match(/^[a-zA-Z_][a-zA-Z_0-9]*$/)?e:JSON.stringify(e).replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'")}__name(quoteComplexKey,"quoteComplexKey");function inspectProperty([e,t],s){s.truncate-=2;typeof e==="string"?e=quoteComplexKey(e):typeof e!=="number"&&(e=`[${s.inspect(e,s)}]`);s.truncate-=e.length;t=s.inspect(t,s);return`${e}: ${t}`}__name(inspectProperty,"inspectProperty");function inspectArray(e,t){const s=Object.keys(e).slice(e.length);if(!e.length&&!s.length)return"[]";t.truncate-=4;const r=inspectList(e,t);t.truncate-=r.length;let n="";s.length&&(n=inspectList(s.map((t=>[t,e[t]])),t,inspectProperty));return`[ ${r}${n?`, ${n}`:""} ]`}__name(inspectArray,"inspectArray");var l=__name((e=>typeof Buffer==="function"&&e instanceof Buffer?"Buffer":e[Symbol.toStringTag]?e[Symbol.toStringTag]:e.constructor.name),"getArrayName");function inspectTypedArray(e,t){const s=l(e);t.truncate-=s.length+4;const r=Object.keys(e).slice(e.length);if(!e.length&&!r.length)return`${s}[]`;let n="";for(let s=0;s<e.length;s++){const r=`${t.stylize(truncate(e[s],t.truncate),"number")}${s===e.length-1?"":", "}`;t.truncate-=r.length;if(e[s]!==e.length&&t.truncate<=3){n+=`${u}(${e.length-e[s]+1})`;break}n+=r}let o="";r.length&&(o=inspectList(r.map((t=>[t,e[t]])),t,inspectProperty));return`${s}[ ${n}${o?`, ${o}`:""} ]`}__name(inspectTypedArray,"inspectTypedArray");function inspectDate(e,t){const s=e.toJSON();if(s===null)return"Invalid Date";const r=s.split("T");const n=r[0];return t.stylize(`${n}T${truncate(r[1],t.truncate-n.length-1)}`,"date")}__name(inspectDate,"inspectDate");function inspectFunction(e,t){const s=e.name;return s?t.stylize(`[Function ${truncate(s,t.truncate-11)}]`,"special"):t.stylize("[Function]","special")}__name(inspectFunction,"inspectFunction");function inspectMapEntry([e,t],s){s.truncate-=4;e=s.inspect(e,s);s.truncate-=e.length;t=s.inspect(t,s);return`${e} => ${t}`}__name(inspectMapEntry,"inspectMapEntry");function mapToEntries(e){const t=[];e.forEach(((e,s)=>{t.push([s,e])}));return t}__name(mapToEntries,"mapToEntries");function inspectMap(e,t){const s=e.size-1;if(s<=0)return"Map{}";t.truncate-=7;return`Map{ ${inspectList(mapToEntries(e),t,inspectMapEntry)} }`}__name(inspectMap,"inspectMap");var p=Number.isNaN||(e=>e!==e);function inspectNumber(e,t){return p(e)?t.stylize("NaN","number"):e===Infinity?t.stylize("Infinity","number"):e===-Infinity?t.stylize("-Infinity","number"):e===0?t.stylize(1/e===Infinity?"+0":"-0","number"):t.stylize(truncate(String(e),t.truncate),"number")}__name(inspectNumber,"inspectNumber");function inspectBigInt(e,t){let s=truncate(e.toString(),t.truncate-1);s!==u&&(s+="n");return t.stylize(s,"bigint")}__name(inspectBigInt,"inspectBigInt");function inspectRegExp(e,t){const s=e.toString().split("/")[2];const r=t.truncate-(2+s.length);const n=e.source;return t.stylize(`/${truncate(n,r)}/${s}`,"regexp")}__name(inspectRegExp,"inspectRegExp");function arrayFromSet(e){const t=[];e.forEach((e=>{t.push(e)}));return t}__name(arrayFromSet,"arrayFromSet");function inspectSet(e,t){if(e.size===0)return"Set{}";t.truncate-=7;return`Set{ ${inspectList(arrayFromSet(e),t)} }`}__name(inspectSet,"inspectSet");var h=new RegExp("['\\u0000-\\u001f\\u007f-\\u009f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]","g");var f={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r","'":"\\'","\\":"\\\\"};var d=16;var y=4;function escape(e){return f[e]||`\\u${`0000${e.charCodeAt(0).toString(d)}`.slice(-y)}`}__name(escape,"escape");function inspectString(e,t){h.test(e)&&(e=e.replace(h,escape));return t.stylize(`'${truncate(e,t.truncate-2)}'`,"string")}__name(inspectString,"inspectString");function inspectSymbol(e){return"description"in Symbol.prototype?e.description?`Symbol(${e.description})`:"Symbol()":e.toString()}__name(inspectSymbol,"inspectSymbol");var g=__name((()=>"Promise{â€¦}"),"getPromiseValue");try{const{getPromiseDetails:e,kPending:t,kRejected:s}=process.binding("util");Array.isArray(e(Promise.resolve()))&&(g=__name(((r,n)=>{const[o,a]=e(r);return o===t?"Promise{<pending>}":`Promise${o===s?"!":""}{${n.inspect(a,n)}}`}),"getPromiseValue"))}catch(e){}var b=g;function inspectObject(e,t){const s=Object.getOwnPropertyNames(e);const r=Object.getOwnPropertySymbols?Object.getOwnPropertySymbols(e):[];if(s.length===0&&r.length===0)return"{}";t.truncate-=4;t.seen=t.seen||[];if(t.seen.indexOf(e)>=0)return"[Circular]";t.seen.push(e);const n=inspectList(s.map((t=>[t,e[t]])),t,inspectProperty);const o=inspectList(r.map((t=>[t,e[t]])),t,inspectProperty);t.seen.pop();let a="";n&&o&&(a=", ");return`{ ${n}${a}${o} }`}__name(inspectObject,"inspectObject");var m=!(typeof Symbol==="undefined"||!Symbol.toStringTag)&&Symbol.toStringTag;function inspectClass(e,t){let s="";m&&m in e&&(s=e[m]);s=s||e.constructor.name;s&&s!=="_class"||(s="<Anonymous Class>");t.truncate-=s.length;return`${s}${inspectObject(e,t)}`}__name(inspectClass,"inspectClass");function inspectArguments(e,t){if(e.length===0)return"Arguments[]";t.truncate-=13;return`Arguments[ ${inspectList(e,t)} ]`}__name(inspectArguments,"inspectArguments");var w=["stack","line","column","name","message","fileName","lineNumber","columnNumber","number","description"];function inspectObject2(e,t){const s=Object.getOwnPropertyNames(e).filter((e=>w.indexOf(e)===-1));const r=e.name;t.truncate-=r.length;let n="";typeof e.message==="string"?n=truncate(e.message,t.truncate):s.unshift("message");n=n?`: ${n}`:"";t.truncate-=n.length+5;const o=inspectList(s.map((t=>[t,e[t]])),t,inspectProperty);return`${r}${n}${o?` { ${o} }`:""}`}__name(inspectObject2,"inspectObject");function inspectAttribute([e,t],s){s.truncate-=3;return t?`${s.stylize(String(e),"yellow")}=${s.stylize(`"${t}"`,"string")}`:`${s.stylize(String(e),"yellow")}`}__name(inspectAttribute,"inspectAttribute");function inspectHTMLCollection(e,t){return inspectList(e,t,inspectHTML,"\n")}__name(inspectHTMLCollection,"inspectHTMLCollection");function inspectHTML(e,t){const s=e.getAttributeNames();const r=e.tagName.toLowerCase();const n=t.stylize(`<${r}`,"special");const o=t.stylize(">","special");const a=t.stylize(`</${r}>`,"special");t.truncate-=r.length*2+5;let i="";if(s.length>0){i+=" ";i+=inspectList(s.map((t=>[t,e.getAttribute(t)])),t,inspectAttribute," ")}t.truncate-=i.length;const c=t.truncate;let l=inspectHTMLCollection(e.children,t);l&&l.length>c&&(l=`${u}(${e.children.length})`);return`${n}${i}${o}${l}${a}`}__name(inspectHTML,"inspectHTML");var v=typeof Symbol==="function"&&typeof Symbol.for==="function";var A=v?Symbol.for("chai/inspect"):"@@chai/inspect";var x=false;try{const e=s();x=!!e.inspect&&e.inspect.custom}catch(e){x=false}var O=new WeakMap;var P={};var E={undefined:(e,t)=>t.stylize("undefined","undefined"),null:(e,t)=>t.stylize("null","null"),boolean:(e,t)=>t.stylize(String(e),"boolean"),Boolean:(e,t)=>t.stylize(String(e),"boolean"),number:inspectNumber,Number:inspectNumber,bigint:inspectBigInt,BigInt:inspectBigInt,string:inspectString,String:inspectString,function:inspectFunction,Function:inspectFunction,symbol:inspectSymbol,Symbol:inspectSymbol,Array:inspectArray,Date:inspectDate,Map:inspectMap,Set:inspectSet,RegExp:inspectRegExp,Promise:b,WeakSet:(e,t)=>t.stylize("WeakSet{â€¦}","special"),WeakMap:(e,t)=>t.stylize("WeakMap{â€¦}","special"),Arguments:inspectArguments,Int8Array:inspectTypedArray,Uint8Array:inspectTypedArray,Uint8ClampedArray:inspectTypedArray,Int16Array:inspectTypedArray,Uint16Array:inspectTypedArray,Int32Array:inspectTypedArray,Uint32Array:inspectTypedArray,Float32Array:inspectTypedArray,Float64Array:inspectTypedArray,Generator:()=>"",DataView:()=>"",ArrayBuffer:()=>"",Error:inspectObject2,HTMLCollection:inspectHTMLCollection,NodeList:inspectHTMLCollection};var M=__name(((e,t,s)=>A in e&&typeof e[A]==="function"?e[A](t):x&&x in e&&typeof e[x]==="function"?e[x](t.depth,t):"inspect"in e&&typeof e.inspect==="function"?e.inspect(t.depth,t):"constructor"in e&&O.has(e.constructor)?O.get(e.constructor)(e,t):P[s]?P[s](e,t):""),"inspectCustom");var S=Object.prototype.toString;function inspect(e,t={}){const s=normaliseOptions(t,inspect);const{customInspect:r}=s;let n=e===null?"null":typeof e;n==="object"&&(n=S.call(e).slice(8,-1));if(n in E)return E[n](e,s);if(r&&e){const t=M(e,s,n);if(t)return typeof t==="string"?t:inspect(t,s)}const o=!!e&&Object.getPrototypeOf(e);return o===Object.prototype||o===null?inspectObject(e,s):e&&typeof HTMLElement==="function"&&e instanceof HTMLElement?inspectHTML(e,s):"constructor"in e?e.constructor!==Object?inspectClass(e,s):inspectObject(e,s):e===Object(e)?inspectObject(e,s):s.stylize(String(e),n)}__name(inspect,"inspect");var j={
/**
   * ### config.includeStack
   *
   * User configurable property, influences whether stack trace
   * is included in Assertion error message. Default of false
   * suppresses stack trace in the error message.
   *
   *     chai.config.includeStack = true;  // enable stack on error
   *
   * @param {Boolean}
   * @api public
   */
includeStack:false,
/**
   * ### config.showDiff
   *
   * User configurable property, influences whether or not
   * the `showDiff` flag should be included in the thrown
   * AssertionErrors. `false` will always be `false`; `true`
   * will be true when the assertion has requested a diff
   * be shown.
   *
   * @param {Boolean}
   * @api public
   */
showDiff:true,
/**
   * ### config.truncateThreshold
   *
   * User configurable property, sets length threshold for actual and
   * expected values in assertion errors. If this threshold is exceeded, for
   * example for large data structures, the value is replaced with something
   * like `[ Array(3) ]` or `{ Object (prop1, prop2) }`.
   *
   * Set it to zero if you want to disable truncating altogether.
   *
   * This is especially userful when doing assertions on arrays: having this
   * set to a reasonable large value makes the failure messages readily
   * inspectable.
   *
   *     chai.config.truncateThreshold = 0;  // disable truncating
   *
   * @param {Number}
   * @api public
   */
truncateThreshold:40,
/**
   * ### config.useProxy
   *
   * User configurable property, defines if chai will use a Proxy to throw
   * an error when a non-existent property is read, which protects users
   * from typos when using property-based assertions.
   *
   * Set it to false if you want to disable this feature.
   *
   *     chai.config.useProxy = false;  // disable use of Proxy
   *
   * This feature is automatically disabled regardless of this config value
   * in environments that don't support proxies.
   *
   * @param {Boolean}
   * @api public
   */
useProxy:true,
/**
   * ### config.proxyExcludedKeys
   *
   * User configurable property, defines which properties should be ignored
   * instead of throwing an error if they do not exist on the assertion.
   * This is only applied if the environment Chai is running in supports proxies and
   * if the `useProxy` configuration setting is enabled.
   * By default, `then` and `inspect` will not throw an error if they do not exist on the
   * assertion object because the `.inspect` property is read by `util.inspect` (for example, when
   * using `console.log` on the assertion object) and `.then` is necessary for promise type-checking.
   *
   *     // By default these keys will not throw an error if they do not exist on the assertion object
   *     chai.config.proxyExcludedKeys = ['then', 'inspect'];
   *
   * @param {Array}
   * @api public
   */
proxyExcludedKeys:["then","catch","inspect","toJSON"]};function inspect2(e,t,s,r){var n={colors:r,depth:typeof s==="undefined"?2:s,showHidden:t,truncate:j.truncateThreshold?j.truncateThreshold:Infinity};return inspect(e,n)}__name(inspect2,"inspect");function objDisplay(e){var t=inspect2(e),s=Object.prototype.toString.call(e);if(j.truncateThreshold&&t.length>=j.truncateThreshold){if(s==="[object Function]")return e.name&&e.name!==""?"[Function: "+e.name+"]":"[Function]";if(s==="[object Array]")return"[ Array("+e.length+") ]";if(s==="[object Object]"){var r=Object.keys(e),n=r.length>2?r.splice(0,2).join(", ")+", ...":r.join(", ");return"{ Object ("+n+") }"}return t}return t}__name(objDisplay,"objDisplay");function getMessage2(e,t){var s=flag(e,"negate"),r=flag(e,"object"),n=t[3],o=getActual(e,t),a=s?t[2]:t[1],i=flag(e,"message");typeof a==="function"&&(a=a());a=a||"";a=a.replace(/#\{this\}/g,(function(){return objDisplay(r)})).replace(/#\{act\}/g,(function(){return objDisplay(o)})).replace(/#\{exp\}/g,(function(){return objDisplay(n)}));return i?i+": "+a:a}__name(getMessage2,"getMessage");function transferFlags(e,t,s){var r=e.__flags||(e.__flags=Object.create(null));t.__flags||(t.__flags=Object.create(null));s=arguments.length!==3||s;for(var n in r)(s||n!=="object"&&n!=="ssfi"&&n!=="lockSsfi"&&n!="message")&&(t.__flags[n]=r[n])}__name(transferFlags,"transferFlags");function type2(e){if(typeof e==="undefined")return"undefined";if(e===null)return"null";const t=e[Symbol.toStringTag];if(typeof t==="string")return t;const s=8;const r=-1;return Object.prototype.toString.call(e).slice(s,r)}__name(type2,"type");function FakeMap(){this._key="chai/deep-eql__"+Math.random()+Date.now()}__name(FakeMap,"FakeMap");FakeMap.prototype={get:__name((function get(e){return e[this._key]}),"get"),set:__name((function set(e,t){Object.isExtensible(e)&&Object.defineProperty(e,this._key,{value:t,configurable:true})}),"set")};var N=typeof WeakMap==="function"?WeakMap:FakeMap;function memoizeCompare(e,t,s){if(!s||isPrimitive(e)||isPrimitive(t))return null;var r=s.get(e);if(r){var n=r.get(t);if(typeof n==="boolean")return n}return null}__name(memoizeCompare,"memoizeCompare");function memoizeSet(e,t,s,r){if(s&&!isPrimitive(e)&&!isPrimitive(t)){var n=s.get(e);if(n)n.set(t,r);else{n=new N;n.set(t,r);s.set(e,n)}}}__name(memoizeSet,"memoizeSet");var D=deepEqual;function deepEqual(e,t,s){if(s&&s.comparator)return extensiveDeepEqual(e,t,s);var r=simpleEqual(e,t);return r!==null?r:extensiveDeepEqual(e,t,s)}__name(deepEqual,"deepEqual");function simpleEqual(e,t){return e===t?e!==0||1/e===1/t:e!==e&&t!==t||!isPrimitive(e)&&!isPrimitive(t)&&null}__name(simpleEqual,"simpleEqual");function extensiveDeepEqual(e,t,s){s=s||{};s.memoize=s.memoize!==false&&(s.memoize||new N);var r=s&&s.comparator;var n=memoizeCompare(e,t,s.memoize);if(n!==null)return n;var o=memoizeCompare(t,e,s.memoize);if(o!==null)return o;if(r){var a=r(e,t);if(a===false||a===true){memoizeSet(e,t,s.memoize,a);return a}var i=simpleEqual(e,t);if(i!==null)return i}var c=type2(e);if(c!==type2(t)){memoizeSet(e,t,s.memoize,false);return false}memoizeSet(e,t,s.memoize,true);var u=extensiveDeepEqualByType(e,t,c,s);memoizeSet(e,t,s.memoize,u);return u}__name(extensiveDeepEqual,"extensiveDeepEqual");function extensiveDeepEqualByType(e,t,s,r){switch(s){case"String":case"Number":case"Boolean":case"Date":return deepEqual(e.valueOf(),t.valueOf());case"Promise":case"Symbol":case"function":case"WeakMap":case"WeakSet":return e===t;case"Error":return keysEqual(e,t,["name","message","code"],r);case"Arguments":case"Int8Array":case"Uint8Array":case"Uint8ClampedArray":case"Int16Array":case"Uint16Array":case"Int32Array":case"Uint32Array":case"Float32Array":case"Float64Array":case"Array":return iterableEqual(e,t,r);case"RegExp":return regexpEqual(e,t);case"Generator":return generatorEqual(e,t,r);case"DataView":return iterableEqual(new Uint8Array(e.buffer),new Uint8Array(t.buffer),r);case"ArrayBuffer":return iterableEqual(new Uint8Array(e),new Uint8Array(t),r);case"Set":return entriesEqual(e,t,r);case"Map":return entriesEqual(e,t,r);case"Temporal.PlainDate":case"Temporal.PlainTime":case"Temporal.PlainDateTime":case"Temporal.Instant":case"Temporal.ZonedDateTime":case"Temporal.PlainYearMonth":case"Temporal.PlainMonthDay":return e.equals(t);case"Temporal.Duration":return e.total("nanoseconds")===t.total("nanoseconds");case"Temporal.TimeZone":case"Temporal.Calendar":return e.toString()===t.toString();default:return objectEqual(e,t,r)}}__name(extensiveDeepEqualByType,"extensiveDeepEqualByType");function regexpEqual(e,t){return e.toString()===t.toString()}__name(regexpEqual,"regexpEqual");function entriesEqual(e,t,s){if(e.size!==t.size)return false;if(e.size===0)return true;var r=[];var n=[];e.forEach(__name((function gatherEntries(e,t){r.push([e,t])}),"gatherEntries"));t.forEach(__name((function gatherEntries(e,t){n.push([e,t])}),"gatherEntries"));return iterableEqual(r.sort(),n.sort(),s)}__name(entriesEqual,"entriesEqual");function iterableEqual(e,t,s){var r=e.length;if(r!==t.length)return false;if(r===0)return true;var n=-1;while(++n<r)if(deepEqual(e[n],t[n],s)===false)return false;return true}__name(iterableEqual,"iterableEqual");function generatorEqual(e,t,s){return iterableEqual(getGeneratorEntries(e),getGeneratorEntries(t),s)}__name(generatorEqual,"generatorEqual");function hasIteratorFunction(e){return typeof Symbol!=="undefined"&&typeof e==="object"&&typeof Symbol.iterator!=="undefined"&&typeof e[Symbol.iterator]==="function"}__name(hasIteratorFunction,"hasIteratorFunction");function getIteratorEntries(e){if(hasIteratorFunction(e))try{return getGeneratorEntries(e[Symbol.iterator]())}catch(e){return[]}return[]}__name(getIteratorEntries,"getIteratorEntries");function getGeneratorEntries(e){var t=e.next();var s=[t.value];while(t.done===false){t=e.next();s.push(t.value)}return s}__name(getGeneratorEntries,"getGeneratorEntries");function getEnumerableKeys(e){var t=[];for(var s in e)t.push(s);return t}__name(getEnumerableKeys,"getEnumerableKeys");function getEnumerableSymbols(e){var t=[];var s=Object.getOwnPropertySymbols(e);for(var r=0;r<s.length;r+=1){var n=s[r];Object.getOwnPropertyDescriptor(e,n).enumerable&&t.push(n)}return t}__name(getEnumerableSymbols,"getEnumerableSymbols");function keysEqual(e,t,s,r){var n=s.length;if(n===0)return true;for(var o=0;o<n;o+=1)if(deepEqual(e[s[o]],t[s[o]],r)===false)return false;return true}__name(keysEqual,"keysEqual");function objectEqual(e,t,s){var r=getEnumerableKeys(e);var n=getEnumerableKeys(t);var o=getEnumerableSymbols(e);var a=getEnumerableSymbols(t);r=r.concat(o);n=n.concat(a);if(r.length&&r.length===n.length)return iterableEqual(mapSymbols(r).sort(),mapSymbols(n).sort())!==false&&keysEqual(e,t,r,s);var i=getIteratorEntries(e);var c=getIteratorEntries(t);if(i.length&&i.length===c.length){i.sort();c.sort();return iterableEqual(i,c,s)}return r.length===0&&i.length===0&&n.length===0&&c.length===0}__name(objectEqual,"objectEqual");function isPrimitive(e){return e===null||typeof e!=="object"}__name(isPrimitive,"isPrimitive");function mapSymbols(e){return e.map(__name((function mapSymbol(e){return typeof e==="symbol"?e.toString():e}),"mapSymbol"))}__name(mapSymbols,"mapSymbols");function hasProperty(e,t){return typeof e!=="undefined"&&e!==null&&t in Object(e)}__name(hasProperty,"hasProperty");function parsePath(e){const t=e.replace(/([^\\])\[/g,"$1.[");const s=t.match(/(\\\.|[^.]+?)+/g);return s.map((e=>{if(e==="constructor"||e==="__proto__"||e==="prototype")return{};const t=/^\[(\d+)\]$/;const s=t.exec(e);let r=null;r=s?{i:parseFloat(s[1])}:{p:e.replace(/\\([.[\]])/g,"$1")};return r}))}__name(parsePath,"parsePath");function internalGetPathValue(e,t,s){let r=e;let n=null;s=typeof s==="undefined"?t.length:s;for(let e=0;e<s;e++){const o=t[e];if(r){r=typeof o.p==="undefined"?r[o.i]:r[o.p];e===s-1&&(n=r)}}return n}__name(internalGetPathValue,"internalGetPathValue");function getPathInfo(e,t){const s=parsePath(t);const r=s[s.length-1];const n={parent:s.length>1?internalGetPathValue(e,s,s.length-1):e,name:r.p||r.i,value:internalGetPathValue(e,s)};n.exists=hasProperty(n.parent,n.name);return n}__name(getPathInfo,"getPathInfo");function Assertion(e,t,s,r){flag(this,"ssfi",s||Assertion);flag(this,"lockSsfi",r);flag(this,"object",e);flag(this,"message",t);return proxify(this)}__name(Assertion,"Assertion");Object.defineProperty(Assertion,"includeStack",{get:function(){console.warn("Assertion.includeStack is deprecated, use chai.config.includeStack instead.");return j.includeStack},set:function(e){console.warn("Assertion.includeStack is deprecated, use chai.config.includeStack instead.");j.includeStack=e}});Object.defineProperty(Assertion,"showDiff",{get:function(){console.warn("Assertion.showDiff is deprecated, use chai.config.showDiff instead.");return j.showDiff},set:function(e){console.warn("Assertion.showDiff is deprecated, use chai.config.showDiff instead.");j.showDiff=e}});Assertion.addProperty=function(e,t){addProperty(this.prototype,e,t)};Assertion.addMethod=function(e,t){addMethod(this.prototype,e,t)};Assertion.addChainableMethod=function(e,t,s){addChainableMethod(this.prototype,e,t,s)};Assertion.overwriteProperty=function(e,t){overwriteProperty(this.prototype,e,t)};Assertion.overwriteMethod=function(e,t){overwriteMethod(this.prototype,e,t)};Assertion.overwriteChainableMethod=function(e,t,s){overwriteChainableMethod(this.prototype,e,t,s)};Assertion.prototype.assert=function(e,t,s,r,n,o){var i=test(this,arguments);false!==o&&(o=true);void 0===r&&void 0===n&&(o=false);true!==j.showDiff&&(o=false);if(!i){t=getMessage2(this,arguments);var c=getActual(this,arguments);var u={actual:c,expected:r,showDiff:o};var l=getOperator(this,arguments);l&&(u.operator=l);throw new a(t,u,j.includeStack?this.assert:flag(this,"ssfi"))}};Object.defineProperty(Assertion.prototype,"_obj",{get:function(){return flag(this,"object")},set:function(e){flag(this,"object",e)}});function isProxyEnabled(){return j.useProxy&&typeof Proxy!=="undefined"&&typeof Reflect!=="undefined"}__name(isProxyEnabled,"isProxyEnabled");function addProperty(e,t,s){s=s===void 0?function(){}:s;Object.defineProperty(e,t,{get:__name((function propertyGetter(){isProxyEnabled()||flag(this,"lockSsfi")||flag(this,"ssfi",propertyGetter);var e=s.call(this);if(e!==void 0)return e;var t=new Assertion;transferFlags(this,t);return t}),"propertyGetter"),configurable:true})}__name(addProperty,"addProperty");var k=Object.getOwnPropertyDescriptor((function(){}),"length");function addLengthGuard(e,t,s){if(!k.configurable)return e;Object.defineProperty(e,"length",{get:function(){if(s)throw Error("Invalid Chai property: "+t+'.length. Due to a compatibility issue, "length" cannot directly follow "'+t+'". Use "'+t+'.lengthOf" instead.');throw Error("Invalid Chai property: "+t+'.length. See docs for proper usage of "'+t+'".')}});return e}__name(addLengthGuard,"addLengthGuard");function getProperties(e){var t=Object.getOwnPropertyNames(e);function addProperty2(e){t.indexOf(e)===-1&&t.push(e)}__name(addProperty2,"addProperty");var s=Object.getPrototypeOf(e);while(s!==null){Object.getOwnPropertyNames(s).forEach(addProperty2);s=Object.getPrototypeOf(s)}return t}__name(getProperties,"getProperties");var q=["__flags","__methods","_obj","assert"];function proxify(e,t){return isProxyEnabled()?new Proxy(e,{get:__name((function proxyGetter(e,s){if(typeof s==="string"&&j.proxyExcludedKeys.indexOf(s)===-1&&!Reflect.has(e,s)){if(t)throw Error("Invalid Chai property: "+t+"."+s+'. See docs for proper usage of "'+t+'".');var r=null;var n=4;getProperties(e).forEach((function(e){if(!Object.prototype.hasOwnProperty(e)&&q.indexOf(e)===-1){var t=stringDistanceCapped(s,e,n);if(t<n){r=e;n=t}}}));throw r!==null?Error("Invalid Chai property: "+s+'. Did you mean "'+r+'"?'):Error("Invalid Chai property: "+s)}q.indexOf(s)!==-1||flag(e,"lockSsfi")||flag(e,"ssfi",proxyGetter);return Reflect.get(e,s)}),"proxyGetter")}):e}__name(proxify,"proxify");function stringDistanceCapped(e,t,s){if(Math.abs(e.length-t.length)>=s)return s;var r=[];for(var n=0;n<=e.length;n++){r[n]=Array(t.length+1).fill(0);r[n][0]=n}for(var o=0;o<t.length;o++)r[0][o]=o;for(n=1;n<=e.length;n++){var a=e.charCodeAt(n-1);for(o=1;o<=t.length;o++)Math.abs(n-o)>=s?r[n][o]=s:r[n][o]=Math.min(r[n-1][o]+1,r[n][o-1]+1,r[n-1][o-1]+(a===t.charCodeAt(o-1)?0:1))}return r[e.length][t.length]}__name(stringDistanceCapped,"stringDistanceCapped");function addMethod(e,t,s){var r=__name((function(){flag(this,"lockSsfi")||flag(this,"ssfi",r);var e=s.apply(this,arguments);if(e!==void 0)return e;var t=new Assertion;transferFlags(this,t);return t}),"methodWrapper");addLengthGuard(r,t,false);e[t]=proxify(r,t)}__name(addMethod,"addMethod");function overwriteProperty(e,t,s){var r=Object.getOwnPropertyDescriptor(e,t),n=__name((function(){}),"_super");r&&"function"===typeof r.get&&(n=r.get);Object.defineProperty(e,t,{get:__name((function overwritingPropertyGetter(){isProxyEnabled()||flag(this,"lockSsfi")||flag(this,"ssfi",overwritingPropertyGetter);var e=flag(this,"lockSsfi");flag(this,"lockSsfi",true);var t=s(n).call(this);flag(this,"lockSsfi",e);if(t!==void 0)return t;var r=new Assertion;transferFlags(this,r);return r}),"overwritingPropertyGetter"),configurable:true})}__name(overwriteProperty,"overwriteProperty");function overwriteMethod(e,t,s){var r=e[t],n=__name((function(){throw new Error(t+" is not a function")}),"_super");r&&"function"===typeof r&&(n=r);var o=__name((function(){flag(this,"lockSsfi")||flag(this,"ssfi",o);var e=flag(this,"lockSsfi");flag(this,"lockSsfi",true);var t=s(n).apply(this,arguments);flag(this,"lockSsfi",e);if(t!==void 0)return t;var r=new Assertion;transferFlags(this,r);return r}),"overwritingMethodWrapper");addLengthGuard(o,t,false);e[t]=proxify(o,t)}__name(overwriteMethod,"overwriteMethod");var C=typeof Object.setPrototypeOf==="function";var T=__name((function(){}),"testFn");var I=Object.getOwnPropertyNames(T).filter((function(e){var t=Object.getOwnPropertyDescriptor(T,e);return typeof t!=="object"||!t.configurable}));var L=Function.prototype.call;var z=Function.prototype.apply;function addChainableMethod(e,t,s,r){typeof r!=="function"&&(r=__name((function(){}),"chainingBehavior"));var n={method:s,chainingBehavior:r};e.__methods||(e.__methods={});e.__methods[t]=n;Object.defineProperty(e,t,{get:__name((function chainableMethodGetter(){n.chainingBehavior.call(this);var s=__name((function(){flag(this,"lockSsfi")||flag(this,"ssfi",s);var e=n.method.apply(this,arguments);if(e!==void 0)return e;var t=new Assertion;transferFlags(this,t);return t}),"chainableMethodWrapper");addLengthGuard(s,t,true);if(C){var r=Object.create(this);r.call=L;r.apply=z;Object.setPrototypeOf(s,r)}else{var o=Object.getOwnPropertyNames(e);o.forEach((function(t){if(I.indexOf(t)===-1){var r=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(s,t,r)}}))}transferFlags(this,s);return proxify(s)}),"chainableMethodGetter"),configurable:true})}__name(addChainableMethod,"addChainableMethod");function overwriteChainableMethod(e,t,s,r){var n=e.__methods[t];var o=n.chainingBehavior;n.chainingBehavior=__name((function overwritingChainableMethodGetter(){var e=r(o).call(this);if(e!==void 0)return e;var t=new Assertion;transferFlags(this,t);return t}),"overwritingChainableMethodGetter");var a=n.method;n.method=__name((function overwritingChainableMethodWrapper(){var e=s(a).apply(this,arguments);if(e!==void 0)return e;var t=new Assertion;transferFlags(this,t);return t}),"overwritingChainableMethodWrapper")}__name(overwriteChainableMethod,"overwriteChainableMethod");function compareByInspect(e,t){return inspect2(e)<inspect2(t)?-1:1}__name(compareByInspect,"compareByInspect");function getOwnEnumerablePropertySymbols(e){return typeof Object.getOwnPropertySymbols!=="function"?[]:Object.getOwnPropertySymbols(e).filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))}__name(getOwnEnumerablePropertySymbols,"getOwnEnumerablePropertySymbols");function getOwnEnumerableProperties(e){return Object.keys(e).concat(getOwnEnumerablePropertySymbols(e))}__name(getOwnEnumerableProperties,"getOwnEnumerableProperties");function _isNaN(e){return e!==e}__name(_isNaN,"_isNaN");var B=Number.isNaN||_isNaN;function isObjectType(e){var t=type(e);var s=["Array","Object","Function"];return s.indexOf(t)!==-1}__name(isObjectType,"isObjectType");function getOperator(e,t){var s=flag(e,"operator");var r=flag(e,"negate");var n=t[3];var o=r?t[2]:t[1];if(s)return s;typeof o==="function"&&(o=o());o=o||"";if(o&&!/\shave\s/.test(o)){var a=isObjectType(n);return/\snot\s/.test(o)?a?"notDeepStrictEqual":"notStrictEqual":a?"deepStrictEqual":"strictEqual"}}__name(getOperator,"getOperator");function getName(e){return e.name}__name(getName,"getName");var{flag:$}=r;["to","be","been","is","and","has","have","with","that","which","at","of","same","but","does","still","also"].forEach((function(e){Assertion.addProperty(e)}));Assertion.addProperty("not",(function(){$(this,"negate",true)}));Assertion.addProperty("deep",(function(){$(this,"deep",true)}));Assertion.addProperty("nested",(function(){$(this,"nested",true)}));Assertion.addProperty("own",(function(){$(this,"own",true)}));Assertion.addProperty("ordered",(function(){$(this,"ordered",true)}));Assertion.addProperty("any",(function(){$(this,"any",true);$(this,"all",false)}));Assertion.addProperty("all",(function(){$(this,"all",true);$(this,"any",false)}));function an(e,t){t&&$(this,"message",t);e=e.toLowerCase();var s=$(this,"object"),r=~["a","e","i","o","u"].indexOf(e.charAt(0))?"an ":"a ";this.assert(e===type(s).toLowerCase(),"expected #{this} to be "+r+e,"expected #{this} not to be "+r+e)}__name(an,"an");Assertion.addChainableMethod("an",an);Assertion.addChainableMethod("a",an);function SameValueZero(e,t){return B(e)&&B(t)||e===t}__name(SameValueZero,"SameValueZero");function includeChainingBehavior(){$(this,"contains",true)}__name(includeChainingBehavior,"includeChainingBehavior");function include(e,t){t&&$(this,"message",t);var s=$(this,"object"),r=type(s).toLowerCase(),o=$(this,"message"),i=$(this,"negate"),c=$(this,"ssfi"),u=$(this,"deep"),l=u?"deep ":"";o=o?o+": ":"";var p=false;switch(r){case"string":p=s.indexOf(e)!==-1;break;case"weakset":if(u)throw new a(o+"unable to use .deep.include with WeakSet",void 0,c);p=s.has(e);break;case"map":var h=u?D:SameValueZero;s.forEach((function(t){p=p||h(t,e)}));break;case"set":u?s.forEach((function(t){p=p||D(t,e)})):p=s.has(e);break;case"array":p=u?s.some((function(t){return D(t,e)})):s.indexOf(e)!==-1;break;default:if(e!==Object(e))throw new a(o+"the given combination of arguments ("+r+" and "+type(e).toLowerCase()+") is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a "+type(e).toLowerCase(),void 0,c);var f=Object.keys(e),d=null,y=0;f.forEach((function(t){var r=new Assertion(s);transferFlags(this,r,true);$(r,"lockSsfi",true);if(i&&f.length!==1)try{r.property(t,e[t])}catch(e){if(!n.compatibleConstructor(e,a))throw e;d===null&&(d=e);y++}else r.property(t,e[t])}),this);if(i&&f.length>1&&y===f.length)throw d;return}this.assert(p,"expected #{this} to "+l+"include "+inspect2(e),"expected #{this} to not "+l+"include "+inspect2(e))}__name(include,"include");Assertion.addChainableMethod("include",include,includeChainingBehavior);Assertion.addChainableMethod("contain",include,includeChainingBehavior);Assertion.addChainableMethod("contains",include,includeChainingBehavior);Assertion.addChainableMethod("includes",include,includeChainingBehavior);Assertion.addProperty("ok",(function(){this.assert($(this,"object"),"expected #{this} to be truthy","expected #{this} to be falsy")}));Assertion.addProperty("true",(function(){this.assert(true===$(this,"object"),"expected #{this} to be true","expected #{this} to be false",!$(this,"negate"))}));Assertion.addProperty("false",(function(){this.assert(false===$(this,"object"),"expected #{this} to be false","expected #{this} to be true",!!$(this,"negate"))}));Assertion.addProperty("null",(function(){this.assert(null===$(this,"object"),"expected #{this} to be null","expected #{this} not to be null")}));Assertion.addProperty("undefined",(function(){this.assert(void 0===$(this,"object"),"expected #{this} to be undefined","expected #{this} not to be undefined")}));Assertion.addProperty("NaN",(function(){this.assert(B($(this,"object")),"expected #{this} to be NaN","expected #{this} not to be NaN")}));function assertExist(){var e=$(this,"object");this.assert(e!==null&&e!==void 0,"expected #{this} to exist","expected #{this} to not exist")}__name(assertExist,"assertExist");Assertion.addProperty("exist",assertExist);Assertion.addProperty("exists",assertExist);Assertion.addProperty("empty",(function(){var e,t=$(this,"object"),s=$(this,"ssfi"),r=$(this,"message");r=r?r+": ":"";switch(type(t).toLowerCase()){case"array":case"string":e=t.length;break;case"map":case"set":e=t.size;break;case"weakmap":case"weakset":throw new a(r+".empty was passed a weak collection",void 0,s);case"function":var n=r+".empty was passed a function "+getName(t);throw new a(n.trim(),void 0,s);default:if(t!==Object(t))throw new a(r+".empty was passed non-string primitive "+inspect2(t),void 0,s);e=Object.keys(t).length}this.assert(0===e,"expected #{this} to be empty","expected #{this} not to be empty")}));function checkArguments(){var e=$(this,"object"),t=type(e);this.assert("Arguments"===t,"expected #{this} to be arguments but got "+t,"expected #{this} to not be arguments")}__name(checkArguments,"checkArguments");Assertion.addProperty("arguments",checkArguments);Assertion.addProperty("Arguments",checkArguments);function assertEqual(e,t){t&&$(this,"message",t);var s=$(this,"object");if($(this,"deep")){var r=$(this,"lockSsfi");$(this,"lockSsfi",true);this.eql(e);$(this,"lockSsfi",r)}else this.assert(e===s,"expected #{this} to equal #{exp}","expected #{this} to not equal #{exp}",e,this._obj,true)}__name(assertEqual,"assertEqual");Assertion.addMethod("equal",assertEqual);Assertion.addMethod("equals",assertEqual);Assertion.addMethod("eq",assertEqual);function assertEql(e,t){t&&$(this,"message",t);this.assert(D(e,$(this,"object")),"expected #{this} to deeply equal #{exp}","expected #{this} to not deeply equal #{exp}",e,this._obj,true)}__name(assertEql,"assertEql");Assertion.addMethod("eql",assertEql);Assertion.addMethod("eqls",assertEql);function assertAbove(e,t){t&&$(this,"message",t);var s,r=$(this,"object"),n=$(this,"doLength"),o=$(this,"message"),i=o?o+": ":"",c=$(this,"ssfi"),u=type(r).toLowerCase(),l=type(e).toLowerCase(),p=true;n&&u!=="map"&&u!=="set"&&new Assertion(r,o,c,true).to.have.property("length");if(n||u!=="date"||l==="date")if(l==="number"||!n&&u!=="number")if(n||u==="date"||u==="number")p=false;else{var h=u==="string"?"'"+r+"'":r;s=i+"expected "+h+" to be a number or a date"}else s=i+"the argument to above must be a number";else s=i+"the argument to above must be a date";if(p)throw new a(s,void 0,c);if(n){var f,d="length";if(u==="map"||u==="set"){d="size";f=r.size}else f=r.length;this.assert(f>e,"expected #{this} to have a "+d+" above #{exp} but got #{act}","expected #{this} to not have a "+d+" above #{exp}",e,f)}else this.assert(r>e,"expected #{this} to be above #{exp}","expected #{this} to be at most #{exp}",e)}__name(assertAbove,"assertAbove");Assertion.addMethod("above",assertAbove);Assertion.addMethod("gt",assertAbove);Assertion.addMethod("greaterThan",assertAbove);function assertLeast(e,t){t&&$(this,"message",t);var s,r=$(this,"object"),n=$(this,"doLength"),o=$(this,"message"),i=o?o+": ":"",c=$(this,"ssfi"),u=type(r).toLowerCase(),l=type(e).toLowerCase(),p=true;n&&u!=="map"&&u!=="set"&&new Assertion(r,o,c,true).to.have.property("length");if(n||u!=="date"||l==="date")if(l==="number"||!n&&u!=="number")if(n||u==="date"||u==="number")p=false;else{var h=u==="string"?"'"+r+"'":r;s=i+"expected "+h+" to be a number or a date"}else s=i+"the argument to least must be a number";else s=i+"the argument to least must be a date";if(p)throw new a(s,void 0,c);if(n){var f,d="length";if(u==="map"||u==="set"){d="size";f=r.size}else f=r.length;this.assert(f>=e,"expected #{this} to have a "+d+" at least #{exp} but got #{act}","expected #{this} to have a "+d+" below #{exp}",e,f)}else this.assert(r>=e,"expected #{this} to be at least #{exp}","expected #{this} to be below #{exp}",e)}__name(assertLeast,"assertLeast");Assertion.addMethod("least",assertLeast);Assertion.addMethod("gte",assertLeast);Assertion.addMethod("greaterThanOrEqual",assertLeast);function assertBelow(e,t){t&&$(this,"message",t);var s,r=$(this,"object"),n=$(this,"doLength"),o=$(this,"message"),i=o?o+": ":"",c=$(this,"ssfi"),u=type(r).toLowerCase(),l=type(e).toLowerCase(),p=true;n&&u!=="map"&&u!=="set"&&new Assertion(r,o,c,true).to.have.property("length");if(n||u!=="date"||l==="date")if(l==="number"||!n&&u!=="number")if(n||u==="date"||u==="number")p=false;else{var h=u==="string"?"'"+r+"'":r;s=i+"expected "+h+" to be a number or a date"}else s=i+"the argument to below must be a number";else s=i+"the argument to below must be a date";if(p)throw new a(s,void 0,c);if(n){var f,d="length";if(u==="map"||u==="set"){d="size";f=r.size}else f=r.length;this.assert(f<e,"expected #{this} to have a "+d+" below #{exp} but got #{act}","expected #{this} to not have a "+d+" below #{exp}",e,f)}else this.assert(r<e,"expected #{this} to be below #{exp}","expected #{this} to be at least #{exp}",e)}__name(assertBelow,"assertBelow");Assertion.addMethod("below",assertBelow);Assertion.addMethod("lt",assertBelow);Assertion.addMethod("lessThan",assertBelow);function assertMost(e,t){t&&$(this,"message",t);var s,r=$(this,"object"),n=$(this,"doLength"),o=$(this,"message"),i=o?o+": ":"",c=$(this,"ssfi"),u=type(r).toLowerCase(),l=type(e).toLowerCase(),p=true;n&&u!=="map"&&u!=="set"&&new Assertion(r,o,c,true).to.have.property("length");if(n||u!=="date"||l==="date")if(l==="number"||!n&&u!=="number")if(n||u==="date"||u==="number")p=false;else{var h=u==="string"?"'"+r+"'":r;s=i+"expected "+h+" to be a number or a date"}else s=i+"the argument to most must be a number";else s=i+"the argument to most must be a date";if(p)throw new a(s,void 0,c);if(n){var f,d="length";if(u==="map"||u==="set"){d="size";f=r.size}else f=r.length;this.assert(f<=e,"expected #{this} to have a "+d+" at most #{exp} but got #{act}","expected #{this} to have a "+d+" above #{exp}",e,f)}else this.assert(r<=e,"expected #{this} to be at most #{exp}","expected #{this} to be above #{exp}",e)}__name(assertMost,"assertMost");Assertion.addMethod("most",assertMost);Assertion.addMethod("lte",assertMost);Assertion.addMethod("lessThanOrEqual",assertMost);Assertion.addMethod("within",(function(e,t,s){s&&$(this,"message",s);var r,n=$(this,"object"),o=$(this,"doLength"),i=$(this,"message"),c=i?i+": ":"",u=$(this,"ssfi"),l=type(n).toLowerCase(),p=type(e).toLowerCase(),h=type(t).toLowerCase(),f=true,d=p==="date"&&h==="date"?e.toISOString()+".."+t.toISOString():e+".."+t;o&&l!=="map"&&l!=="set"&&new Assertion(n,i,u,true).to.have.property("length");if(o||l!=="date"||p==="date"&&h==="date")if(p==="number"&&h==="number"||!o&&l!=="number")if(o||l==="date"||l==="number")f=false;else{var y=l==="string"?"'"+n+"'":n;r=c+"expected "+y+" to be a number or a date"}else r=c+"the arguments to within must be numbers";else r=c+"the arguments to within must be dates";if(f)throw new a(r,void 0,u);if(o){var g,b="length";if(l==="map"||l==="set"){b="size";g=n.size}else g=n.length;this.assert(g>=e&&g<=t,"expected #{this} to have a "+b+" within "+d,"expected #{this} to not have a "+b+" within "+d)}else this.assert(n>=e&&n<=t,"expected #{this} to be within "+d,"expected #{this} to not be within "+d)}));function assertInstanceOf(e,t){t&&$(this,"message",t);var s=$(this,"object");var r=$(this,"ssfi");var n=$(this,"message");try{var o=s instanceof e}catch(t){if(t instanceof TypeError){n=n?n+": ":"";throw new a(n+"The instanceof assertion needs a constructor but "+type(e)+" was given.",void 0,r)}throw t}var i=getName(e);i==null&&(i="an unnamed constructor");this.assert(o,"expected #{this} to be an instance of "+i,"expected #{this} to not be an instance of "+i)}__name(assertInstanceOf,"assertInstanceOf");Assertion.addMethod("instanceof",assertInstanceOf);Assertion.addMethod("instanceOf",assertInstanceOf);function assertProperty(e,t,s){s&&$(this,"message",s);var r=$(this,"nested"),n=$(this,"own"),o=$(this,"message"),i=$(this,"object"),c=$(this,"ssfi"),u=typeof e;o=o?o+": ":"";if(r){if(u!=="string")throw new a(o+"the argument to property must be a string when using nested syntax",void 0,c)}else if(u!=="string"&&u!=="number"&&u!=="symbol")throw new a(o+"the argument to property must be a string, number, or symbol",void 0,c);if(r&&n)throw new a(o+'The "nested" and "own" flags cannot be combined.',void 0,c);if(i===null||i===void 0)throw new a(o+"Target cannot be null or undefined.",void 0,c);var l=$(this,"deep"),p=$(this,"negate"),h=r?getPathInfo(i,e):null,f=r?h.value:i[e];var d="";l&&(d+="deep ");n&&(d+="own ");r&&(d+="nested ");d+="property ";var y;y=n?Object.prototype.hasOwnProperty.call(i,e):r?h.exists:hasProperty(i,e);p&&arguments.length!==1||this.assert(y,"expected #{this} to have "+d+inspect2(e),"expected #{this} to not have "+d+inspect2(e));arguments.length>1&&this.assert(y&&(l?D(t,f):t===f),"expected #{this} to have "+d+inspect2(e)+" of #{exp}, but got #{act}","expected #{this} to not have "+d+inspect2(e)+" of #{act}",t,f);$(this,"object",f)}__name(assertProperty,"assertProperty");Assertion.addMethod("property",assertProperty);function assertOwnProperty(e,t,s){$(this,"own",true);assertProperty.apply(this,arguments)}__name(assertOwnProperty,"assertOwnProperty");Assertion.addMethod("ownProperty",assertOwnProperty);Assertion.addMethod("haveOwnProperty",assertOwnProperty);function assertOwnPropertyDescriptor(e,t,s){if(typeof t==="string"){s=t;t=null}s&&$(this,"message",s);var r=$(this,"object");var n=Object.getOwnPropertyDescriptor(Object(r),e);n&&t?this.assert(D(t,n),"expected the own property descriptor for "+inspect2(e)+" on #{this} to match "+inspect2(t)+", got "+inspect2(n),"expected the own property descriptor for "+inspect2(e)+" on #{this} to not match "+inspect2(t),t,n,true):this.assert(n,"expected #{this} to have an own property descriptor for "+inspect2(e),"expected #{this} to not have an own property descriptor for "+inspect2(e));$(this,"object",n)}__name(assertOwnPropertyDescriptor,"assertOwnPropertyDescriptor");Assertion.addMethod("ownPropertyDescriptor",assertOwnPropertyDescriptor);Assertion.addMethod("haveOwnPropertyDescriptor",assertOwnPropertyDescriptor);function assertLengthChain(){$(this,"doLength",true)}__name(assertLengthChain,"assertLengthChain");function assertLength(e,t){t&&$(this,"message",t);var s,r=$(this,"object"),n=type(r).toLowerCase(),o=$(this,"message"),a=$(this,"ssfi"),i="length";switch(n){case"map":case"set":i="size";s=r.size;break;default:new Assertion(r,o,a,true).to.have.property("length");s=r.length}this.assert(s==e,"expected #{this} to have a "+i+" of #{exp} but got #{act}","expected #{this} to not have a "+i+" of #{act}",e,s)}__name(assertLength,"assertLength");Assertion.addChainableMethod("length",assertLength,assertLengthChain);Assertion.addChainableMethod("lengthOf",assertLength,assertLengthChain);function assertMatch(e,t){t&&$(this,"message",t);var s=$(this,"object");this.assert(e.exec(s),"expected #{this} to match "+e,"expected #{this} not to match "+e)}__name(assertMatch,"assertMatch");Assertion.addMethod("match",assertMatch);Assertion.addMethod("matches",assertMatch);Assertion.addMethod("string",(function(e,t){t&&$(this,"message",t);var s=$(this,"object"),r=$(this,"message"),n=$(this,"ssfi");new Assertion(s,r,n,true).is.a("string");this.assert(~s.indexOf(e),"expected #{this} to contain "+inspect2(e),"expected #{this} to not contain "+inspect2(e))}));function assertKeys(e){var t,s,r=$(this,"object"),n=type(r),o=type(e),i=$(this,"ssfi"),c=$(this,"deep"),u="",l=true,p=$(this,"message");p=p?p+": ":"";var h=p+"when testing keys against an object or an array you must give a single Array|Object|String argument or multiple String arguments";if(n==="Map"||n==="Set"){u=c?"deeply ":"";s=[];r.forEach((function(e,t){s.push(t)}));o!=="Array"&&(e=Array.prototype.slice.call(arguments))}else{s=getOwnEnumerableProperties(r);switch(o){case"Array":if(arguments.length>1)throw new a(h,void 0,i);break;case"Object":if(arguments.length>1)throw new a(h,void 0,i);e=Object.keys(e);break;default:e=Array.prototype.slice.call(arguments)}e=e.map((function(e){return typeof e==="symbol"?e:String(e)}))}if(!e.length)throw new a(p+"keys required",void 0,i);var f=e.length,d=$(this,"any"),y=$(this,"all"),g=e;d||y||(y=true);d&&(l=g.some((function(e){return s.some((function(t){return c?D(e,t):e===t}))})));if(y){l=g.every((function(e){return s.some((function(t){return c?D(e,t):e===t}))}));$(this,"contains")||(l=l&&e.length==s.length)}if(f>1){e=e.map((function(e){return inspect2(e)}));var b=e.pop();y&&(t=e.join(", ")+", and "+b);d&&(t=e.join(", ")+", or "+b)}else t=inspect2(e[0]);t=(f>1?"keys ":"key ")+t;t=($(this,"contains")?"contain ":"have ")+t;this.assert(l,"expected #{this} to "+u+t,"expected #{this} to not "+u+t,g.slice(0).sort(compareByInspect),s.sort(compareByInspect),true)}__name(assertKeys,"assertKeys");Assertion.addMethod("keys",assertKeys);Assertion.addMethod("key",assertKeys);function assertThrows(e,t,s){s&&$(this,"message",s);var r=$(this,"object"),o=$(this,"ssfi"),a=$(this,"message"),i=$(this,"negate")||false;new Assertion(r,a,o,true).is.a("function");if(e instanceof RegExp||typeof e==="string"){t=e;e=null}var c;try{r()}catch(e){c=e}var u=e===void 0&&t===void 0;var l=Boolean(e&&t);var p=false;var h=false;if(u||!u&&!i){var f="an error";e instanceof Error?f="#{exp}":e&&(f=n.getConstructorName(e));this.assert(c,"expected #{this} to throw "+f,"expected #{this} to not throw an error but #{act} was thrown",e&&e.toString(),c instanceof Error?c.toString():typeof c==="string"?c:c&&n.getConstructorName(c))}if(e&&c){if(e instanceof Error){var d=n.compatibleInstance(c,e);d===i&&(l&&i?p=true:this.assert(i,"expected #{this} to throw #{exp} but #{act} was thrown","expected #{this} to not throw #{exp}"+(c&&!i?" but #{act} was thrown":""),e.toString(),c.toString()))}var y=n.compatibleConstructor(c,e);y===i&&(l&&i?p=true:this.assert(i,"expected #{this} to throw #{exp} but #{act} was thrown","expected #{this} to not throw #{exp}"+(c?" but #{act} was thrown":""),e instanceof Error?e.toString():e&&n.getConstructorName(e),c instanceof Error?c.toString():c&&n.getConstructorName(c)))}if(c&&t!==void 0&&t!==null){var g="including";t instanceof RegExp&&(g="matching");var b=n.compatibleMessage(c,t);b===i&&(l&&i?h=true:this.assert(i,"expected #{this} to throw error "+g+" #{exp} but got #{act}","expected #{this} to throw error not "+g+" #{exp}",t,n.getMessage(c)))}p&&h&&this.assert(i,"expected #{this} to throw #{exp} but #{act} was thrown","expected #{this} to not throw #{exp}"+(c?" but #{act} was thrown":""),e instanceof Error?e.toString():e&&n.getConstructorName(e),c instanceof Error?c.toString():c&&n.getConstructorName(c));$(this,"object",c)}__name(assertThrows,"assertThrows");Assertion.addMethod("throw",assertThrows);Assertion.addMethod("throws",assertThrows);Assertion.addMethod("Throw",assertThrows);function respondTo(e,t){t&&$(this,"message",t);var s=$(this,"object"),r=$(this,"itself"),n="function"!==typeof s||r?s[e]:s.prototype[e];this.assert("function"===typeof n,"expected #{this} to respond to "+inspect2(e),"expected #{this} to not respond to "+inspect2(e))}__name(respondTo,"respondTo");Assertion.addMethod("respondTo",respondTo);Assertion.addMethod("respondsTo",respondTo);Assertion.addProperty("itself",(function(){$(this,"itself",true)}));function satisfy(e,t){t&&$(this,"message",t);var s=$(this,"object");var r=e(s);this.assert(r,"expected #{this} to satisfy "+objDisplay(e),"expected #{this} to not satisfy"+objDisplay(e),!$(this,"negate"),r)}__name(satisfy,"satisfy");Assertion.addMethod("satisfy",satisfy);Assertion.addMethod("satisfies",satisfy);function closeTo(e,t,s){s&&$(this,"message",s);var r=$(this,"object"),n=$(this,"message"),o=$(this,"ssfi");new Assertion(r,n,o,true).is.a("number");if(typeof e!=="number"||typeof t!=="number"){n=n?n+": ":"";var i=t===void 0?", and a delta is required":"";throw new a(n+"the arguments to closeTo or approximately must be numbers"+i,void 0,o)}this.assert(Math.abs(r-e)<=t,"expected #{this} to be close to "+e+" +/- "+t,"expected #{this} not to be close to "+e+" +/- "+t)}__name(closeTo,"closeTo");Assertion.addMethod("closeTo",closeTo);Assertion.addMethod("approximately",closeTo);function isSubsetOf(e,t,s,r,n){if(!r){if(e.length!==t.length)return false;t=t.slice()}return e.every((function(e,o){if(n)return s?s(e,t[o]):e===t[o];if(!s){var a=t.indexOf(e);if(a===-1)return false;r||t.splice(a,1);return true}return t.some((function(n,o){if(!s(e,n))return false;r||t.splice(o,1);return true}))}))}__name(isSubsetOf,"isSubsetOf");Assertion.addMethod("members",(function(e,t){t&&$(this,"message",t);var s=$(this,"object"),r=$(this,"message"),n=$(this,"ssfi");new Assertion(s,r,n,true).to.be.an("array");new Assertion(e,r,n,true).to.be.an("array");var o=$(this,"contains");var a=$(this,"ordered");var i,c,u;if(o){i=a?"an ordered superset":"a superset";c="expected #{this} to be "+i+" of #{exp}";u="expected #{this} to not be "+i+" of #{exp}"}else{i=a?"ordered members":"members";c="expected #{this} to have the same "+i+" as #{exp}";u="expected #{this} to not have the same "+i+" as #{exp}"}var l=$(this,"deep")?D:void 0;this.assert(isSubsetOf(e,s,l,o,a),c,u,e,s,true)}));function oneOf(e,t){t&&$(this,"message",t);var s=$(this,"object"),r=$(this,"message"),n=$(this,"ssfi"),o=$(this,"contains"),a=$(this,"deep");new Assertion(e,r,n,true).to.be.an("array");o?this.assert(e.some((function(e){return s.indexOf(e)>-1})),"expected #{this} to contain one of #{exp}","expected #{this} to not contain one of #{exp}",e,s):a?this.assert(e.some((function(e){return D(s,e)})),"expected #{this} to deeply equal one of #{exp}","expected #{this} to deeply equal one of #{exp}",e,s):this.assert(e.indexOf(s)>-1,"expected #{this} to be one of #{exp}","expected #{this} to not be one of #{exp}",e,s)}__name(oneOf,"oneOf");Assertion.addMethod("oneOf",oneOf);function assertChanges(e,t,s){s&&$(this,"message",s);var r=$(this,"object"),n=$(this,"message"),o=$(this,"ssfi");new Assertion(r,n,o,true).is.a("function");var a;if(t){new Assertion(e,n,o,true).to.have.property(t);a=e[t]}else{new Assertion(e,n,o,true).is.a("function");a=e()}r();var i=t===void 0||t===null?e():e[t];var c=t===void 0||t===null?a:"."+t;$(this,"deltaMsgObj",c);$(this,"initialDeltaValue",a);$(this,"finalDeltaValue",i);$(this,"deltaBehavior","change");$(this,"realDelta",i!==a);this.assert(a!==i,"expected "+c+" to change","expected "+c+" to not change")}__name(assertChanges,"assertChanges");Assertion.addMethod("change",assertChanges);Assertion.addMethod("changes",assertChanges);function assertIncreases(e,t,s){s&&$(this,"message",s);var r=$(this,"object"),n=$(this,"message"),o=$(this,"ssfi");new Assertion(r,n,o,true).is.a("function");var a;if(t){new Assertion(e,n,o,true).to.have.property(t);a=e[t]}else{new Assertion(e,n,o,true).is.a("function");a=e()}new Assertion(a,n,o,true).is.a("number");r();var i=t===void 0||t===null?e():e[t];var c=t===void 0||t===null?a:"."+t;$(this,"deltaMsgObj",c);$(this,"initialDeltaValue",a);$(this,"finalDeltaValue",i);$(this,"deltaBehavior","increase");$(this,"realDelta",i-a);this.assert(i-a>0,"expected "+c+" to increase","expected "+c+" to not increase")}__name(assertIncreases,"assertIncreases");Assertion.addMethod("increase",assertIncreases);Assertion.addMethod("increases",assertIncreases);function assertDecreases(e,t,s){s&&$(this,"message",s);var r=$(this,"object"),n=$(this,"message"),o=$(this,"ssfi");new Assertion(r,n,o,true).is.a("function");var a;if(t){new Assertion(e,n,o,true).to.have.property(t);a=e[t]}else{new Assertion(e,n,o,true).is.a("function");a=e()}new Assertion(a,n,o,true).is.a("number");r();var i=t===void 0||t===null?e():e[t];var c=t===void 0||t===null?a:"."+t;$(this,"deltaMsgObj",c);$(this,"initialDeltaValue",a);$(this,"finalDeltaValue",i);$(this,"deltaBehavior","decrease");$(this,"realDelta",a-i);this.assert(i-a<0,"expected "+c+" to decrease","expected "+c+" to not decrease")}__name(assertDecreases,"assertDecreases");Assertion.addMethod("decrease",assertDecreases);Assertion.addMethod("decreases",assertDecreases);function assertDelta(e,t){t&&$(this,"message",t);var s=$(this,"deltaMsgObj");var r=$(this,"initialDeltaValue");var n=$(this,"finalDeltaValue");var o=$(this,"deltaBehavior");var a=$(this,"realDelta");var i;i=o==="change"?Math.abs(n-r)===Math.abs(e):a===Math.abs(e);this.assert(i,"expected "+s+" to "+o+" by "+e,"expected "+s+" to not "+o+" by "+e)}__name(assertDelta,"assertDelta");Assertion.addMethod("by",assertDelta);Assertion.addProperty("extensible",(function(){var e=$(this,"object");var t=e===Object(e)&&Object.isExtensible(e);this.assert(t,"expected #{this} to be extensible","expected #{this} to not be extensible")}));Assertion.addProperty("sealed",(function(){var e=$(this,"object");var t=e!==Object(e)||Object.isSealed(e);this.assert(t,"expected #{this} to be sealed","expected #{this} to not be sealed")}));Assertion.addProperty("frozen",(function(){var e=$(this,"object");var t=e!==Object(e)||Object.isFrozen(e);this.assert(t,"expected #{this} to be frozen","expected #{this} to not be frozen")}));Assertion.addProperty("finite",(function(e){var t=$(this,"object");this.assert(typeof t==="number"&&isFinite(t),"expected #{this} to be a finite number","expected #{this} to not be a finite number")}));function expect(e,t){return new Assertion(e,t)}__name(expect,"expect");expect.fail=function(e,t,s,r){if(arguments.length<2){s=e;e=void 0}s=s||"expect.fail()";throw new a(s,{actual:e,expected:t,operator:r},expect.fail)};var F={};__export(F,{Should:()=>V,should:()=>_});function loadShould(){function shouldGetter(){return this instanceof String||this instanceof Number||this instanceof Boolean||typeof Symbol==="function"&&this instanceof Symbol||typeof BigInt==="function"&&this instanceof BigInt?new Assertion(this.valueOf(),null,shouldGetter):new Assertion(this,null,shouldGetter)}__name(shouldGetter,"shouldGetter");function shouldSetter(e){Object.defineProperty(this,"should",{value:e,enumerable:true,configurable:true,writable:true})}__name(shouldSetter,"shouldSetter");Object.defineProperty(Object.prototype,"should",{set:shouldSetter,get:shouldGetter,configurable:true});var e={};e.fail=function(t,s,r,n){if(arguments.length<2){r=t;t=void 0}r=r||"should.fail()";throw new a(r,{actual:t,expected:s,operator:n},e.fail)};e.equal=function(e,t,s){new Assertion(e,s).to.equal(t)};e.Throw=function(e,t,s,r){new Assertion(e,r).to.Throw(t,s)};e.exist=function(e,t){new Assertion(e,t).to.exist};e.not={};e.not.equal=function(e,t,s){new Assertion(e,s).to.not.equal(t)};e.not.Throw=function(e,t,s,r){new Assertion(e,r).to.not.Throw(t,s)};e.not.exist=function(e,t){new Assertion(e,t).to.not.exist};e.throw=e.Throw;e.not.throw=e.not.Throw;return e}__name(loadShould,"loadShould");var _=loadShould;var V=loadShould;function assert(e,t){var s=new Assertion(null,null,assert,true);s.assert(e,t,"[ negation message unavailable ]")}__name(assert,"assert");assert.fail=function(e,t,s,r){if(arguments.length<2){s=e;e=void 0}s=s||"assert.fail()";throw new a(s,{actual:e,expected:t,operator:r},assert.fail)};assert.isOk=function(e,t){new Assertion(e,t,assert.isOk,true).is.ok};assert.isNotOk=function(e,t){new Assertion(e,t,assert.isNotOk,true).is.not.ok};assert.equal=function(e,t,s){var r=new Assertion(e,s,assert.equal,true);r.assert(t==flag(r,"object"),"expected #{this} to equal #{exp}","expected #{this} to not equal #{act}",t,e,true)};assert.notEqual=function(e,t,s){var r=new Assertion(e,s,assert.notEqual,true);r.assert(t!=flag(r,"object"),"expected #{this} to not equal #{exp}","expected #{this} to equal #{act}",t,e,true)};assert.strictEqual=function(e,t,s){new Assertion(e,s,assert.strictEqual,true).to.equal(t)};assert.notStrictEqual=function(e,t,s){new Assertion(e,s,assert.notStrictEqual,true).to.not.equal(t)};assert.deepEqual=assert.deepStrictEqual=function(e,t,s){new Assertion(e,s,assert.deepEqual,true).to.eql(t)};assert.notDeepEqual=function(e,t,s){new Assertion(e,s,assert.notDeepEqual,true).to.not.eql(t)};assert.isAbove=function(e,t,s){new Assertion(e,s,assert.isAbove,true).to.be.above(t)};assert.isAtLeast=function(e,t,s){new Assertion(e,s,assert.isAtLeast,true).to.be.least(t)};assert.isBelow=function(e,t,s){new Assertion(e,s,assert.isBelow,true).to.be.below(t)};assert.isAtMost=function(e,t,s){new Assertion(e,s,assert.isAtMost,true).to.be.most(t)};assert.isTrue=function(e,t){new Assertion(e,t,assert.isTrue,true).is.true};assert.isNotTrue=function(e,t){new Assertion(e,t,assert.isNotTrue,true).to.not.equal(true)};assert.isFalse=function(e,t){new Assertion(e,t,assert.isFalse,true).is.false};assert.isNotFalse=function(e,t){new Assertion(e,t,assert.isNotFalse,true).to.not.equal(false)};assert.isNull=function(e,t){new Assertion(e,t,assert.isNull,true).to.equal(null)};assert.isNotNull=function(e,t){new Assertion(e,t,assert.isNotNull,true).to.not.equal(null)};assert.isNaN=function(e,t){new Assertion(e,t,assert.isNaN,true).to.be.NaN};assert.isNotNaN=function(e,t){new Assertion(e,t,assert.isNotNaN,true).not.to.be.NaN};assert.exists=function(e,t){new Assertion(e,t,assert.exists,true).to.exist};assert.notExists=function(e,t){new Assertion(e,t,assert.notExists,true).to.not.exist};assert.isUndefined=function(e,t){new Assertion(e,t,assert.isUndefined,true).to.equal(void 0)};assert.isDefined=function(e,t){new Assertion(e,t,assert.isDefined,true).to.not.equal(void 0)};assert.isFunction=function(e,t){new Assertion(e,t,assert.isFunction,true).to.be.a("function")};assert.isNotFunction=function(e,t){new Assertion(e,t,assert.isNotFunction,true).to.not.be.a("function")};assert.isObject=function(e,t){new Assertion(e,t,assert.isObject,true).to.be.a("object")};assert.isNotObject=function(e,t){new Assertion(e,t,assert.isNotObject,true).to.not.be.a("object")};assert.isArray=function(e,t){new Assertion(e,t,assert.isArray,true).to.be.an("array")};assert.isNotArray=function(e,t){new Assertion(e,t,assert.isNotArray,true).to.not.be.an("array")};assert.isString=function(e,t){new Assertion(e,t,assert.isString,true).to.be.a("string")};assert.isNotString=function(e,t){new Assertion(e,t,assert.isNotString,true).to.not.be.a("string")};assert.isNumber=function(e,t){new Assertion(e,t,assert.isNumber,true).to.be.a("number")};assert.isNotNumber=function(e,t){new Assertion(e,t,assert.isNotNumber,true).to.not.be.a("number")};assert.isFinite=function(e,t){new Assertion(e,t,assert.isFinite,true).to.be.finite};assert.isBoolean=function(e,t){new Assertion(e,t,assert.isBoolean,true).to.be.a("boolean")};assert.isNotBoolean=function(e,t){new Assertion(e,t,assert.isNotBoolean,true).to.not.be.a("boolean")};assert.typeOf=function(e,t,s){new Assertion(e,s,assert.typeOf,true).to.be.a(t)};assert.notTypeOf=function(e,t,s){new Assertion(e,s,assert.notTypeOf,true).to.not.be.a(t)};assert.instanceOf=function(e,t,s){new Assertion(e,s,assert.instanceOf,true).to.be.instanceOf(t)};assert.notInstanceOf=function(e,t,s){new Assertion(e,s,assert.notInstanceOf,true).to.not.be.instanceOf(t)};assert.include=function(e,t,s){new Assertion(e,s,assert.include,true).include(t)};assert.notInclude=function(e,t,s){new Assertion(e,s,assert.notInclude,true).not.include(t)};assert.deepInclude=function(e,t,s){new Assertion(e,s,assert.deepInclude,true).deep.include(t)};assert.notDeepInclude=function(e,t,s){new Assertion(e,s,assert.notDeepInclude,true).not.deep.include(t)};assert.nestedInclude=function(e,t,s){new Assertion(e,s,assert.nestedInclude,true).nested.include(t)};assert.notNestedInclude=function(e,t,s){new Assertion(e,s,assert.notNestedInclude,true).not.nested.include(t)};assert.deepNestedInclude=function(e,t,s){new Assertion(e,s,assert.deepNestedInclude,true).deep.nested.include(t)};assert.notDeepNestedInclude=function(e,t,s){new Assertion(e,s,assert.notDeepNestedInclude,true).not.deep.nested.include(t)};assert.ownInclude=function(e,t,s){new Assertion(e,s,assert.ownInclude,true).own.include(t)};assert.notOwnInclude=function(e,t,s){new Assertion(e,s,assert.notOwnInclude,true).not.own.include(t)};assert.deepOwnInclude=function(e,t,s){new Assertion(e,s,assert.deepOwnInclude,true).deep.own.include(t)};assert.notDeepOwnInclude=function(e,t,s){new Assertion(e,s,assert.notDeepOwnInclude,true).not.deep.own.include(t)};assert.match=function(e,t,s){new Assertion(e,s,assert.match,true).to.match(t)};assert.notMatch=function(e,t,s){new Assertion(e,s,assert.notMatch,true).to.not.match(t)};assert.property=function(e,t,s){new Assertion(e,s,assert.property,true).to.have.property(t)};assert.notProperty=function(e,t,s){new Assertion(e,s,assert.notProperty,true).to.not.have.property(t)};assert.propertyVal=function(e,t,s,r){new Assertion(e,r,assert.propertyVal,true).to.have.property(t,s)};assert.notPropertyVal=function(e,t,s,r){new Assertion(e,r,assert.notPropertyVal,true).to.not.have.property(t,s)};assert.deepPropertyVal=function(e,t,s,r){new Assertion(e,r,assert.deepPropertyVal,true).to.have.deep.property(t,s)};assert.notDeepPropertyVal=function(e,t,s,r){new Assertion(e,r,assert.notDeepPropertyVal,true).to.not.have.deep.property(t,s)};assert.ownProperty=function(e,t,s){new Assertion(e,s,assert.ownProperty,true).to.have.own.property(t)};assert.notOwnProperty=function(e,t,s){new Assertion(e,s,assert.notOwnProperty,true).to.not.have.own.property(t)};assert.ownPropertyVal=function(e,t,s,r){new Assertion(e,r,assert.ownPropertyVal,true).to.have.own.property(t,s)};assert.notOwnPropertyVal=function(e,t,s,r){new Assertion(e,r,assert.notOwnPropertyVal,true).to.not.have.own.property(t,s)};assert.deepOwnPropertyVal=function(e,t,s,r){new Assertion(e,r,assert.deepOwnPropertyVal,true).to.have.deep.own.property(t,s)};assert.notDeepOwnPropertyVal=function(e,t,s,r){new Assertion(e,r,assert.notDeepOwnPropertyVal,true).to.not.have.deep.own.property(t,s)};assert.nestedProperty=function(e,t,s){new Assertion(e,s,assert.nestedProperty,true).to.have.nested.property(t)};assert.notNestedProperty=function(e,t,s){new Assertion(e,s,assert.notNestedProperty,true).to.not.have.nested.property(t)};assert.nestedPropertyVal=function(e,t,s,r){new Assertion(e,r,assert.nestedPropertyVal,true).to.have.nested.property(t,s)};assert.notNestedPropertyVal=function(e,t,s,r){new Assertion(e,r,assert.notNestedPropertyVal,true).to.not.have.nested.property(t,s)};assert.deepNestedPropertyVal=function(e,t,s,r){new Assertion(e,r,assert.deepNestedPropertyVal,true).to.have.deep.nested.property(t,s)};assert.notDeepNestedPropertyVal=function(e,t,s,r){new Assertion(e,r,assert.notDeepNestedPropertyVal,true).to.not.have.deep.nested.property(t,s)};assert.lengthOf=function(e,t,s){new Assertion(e,s,assert.lengthOf,true).to.have.lengthOf(t)};assert.hasAnyKeys=function(e,t,s){new Assertion(e,s,assert.hasAnyKeys,true).to.have.any.keys(t)};assert.hasAllKeys=function(e,t,s){new Assertion(e,s,assert.hasAllKeys,true).to.have.all.keys(t)};assert.containsAllKeys=function(e,t,s){new Assertion(e,s,assert.containsAllKeys,true).to.contain.all.keys(t)};assert.doesNotHaveAnyKeys=function(e,t,s){new Assertion(e,s,assert.doesNotHaveAnyKeys,true).to.not.have.any.keys(t)};assert.doesNotHaveAllKeys=function(e,t,s){new Assertion(e,s,assert.doesNotHaveAllKeys,true).to.not.have.all.keys(t)};assert.hasAnyDeepKeys=function(e,t,s){new Assertion(e,s,assert.hasAnyDeepKeys,true).to.have.any.deep.keys(t)};assert.hasAllDeepKeys=function(e,t,s){new Assertion(e,s,assert.hasAllDeepKeys,true).to.have.all.deep.keys(t)};assert.containsAllDeepKeys=function(e,t,s){new Assertion(e,s,assert.containsAllDeepKeys,true).to.contain.all.deep.keys(t)};assert.doesNotHaveAnyDeepKeys=function(e,t,s){new Assertion(e,s,assert.doesNotHaveAnyDeepKeys,true).to.not.have.any.deep.keys(t)};assert.doesNotHaveAllDeepKeys=function(e,t,s){new Assertion(e,s,assert.doesNotHaveAllDeepKeys,true).to.not.have.all.deep.keys(t)};assert.throws=function(e,t,s,r){if("string"===typeof t||t instanceof RegExp){s=t;t=null}var n=new Assertion(e,r,assert.throws,true).to.throw(t,s);return flag(n,"object")};assert.doesNotThrow=function(e,t,s,r){if("string"===typeof t||t instanceof RegExp){s=t;t=null}new Assertion(e,r,assert.doesNotThrow,true).to.not.throw(t,s)};assert.operator=function(e,t,s,r){var n;switch(t){case"==":n=e==s;break;case"===":n=e===s;break;case">":n=e>s;break;case">=":n=e>=s;break;case"<":n=e<s;break;case"<=":n=e<=s;break;case"!=":n=e!=s;break;case"!==":n=e!==s;break;default:r=r?r+": ":r;throw new a(r+'Invalid operator "'+t+'"',void 0,assert.operator)}var o=new Assertion(n,r,assert.operator,true);o.assert(true===flag(o,"object"),"expected "+inspect2(e)+" to be "+t+" "+inspect2(s),"expected "+inspect2(e)+" to not be "+t+" "+inspect2(s))};assert.closeTo=function(e,t,s,r){new Assertion(e,r,assert.closeTo,true).to.be.closeTo(t,s)};assert.approximately=function(e,t,s,r){new Assertion(e,r,assert.approximately,true).to.be.approximately(t,s)};assert.sameMembers=function(e,t,s){new Assertion(e,s,assert.sameMembers,true).to.have.same.members(t)};assert.notSameMembers=function(e,t,s){new Assertion(e,s,assert.notSameMembers,true).to.not.have.same.members(t)};assert.sameDeepMembers=function(e,t,s){new Assertion(e,s,assert.sameDeepMembers,true).to.have.same.deep.members(t)};assert.notSameDeepMembers=function(e,t,s){new Assertion(e,s,assert.notSameDeepMembers,true).to.not.have.same.deep.members(t)};assert.sameOrderedMembers=function(e,t,s){new Assertion(e,s,assert.sameOrderedMembers,true).to.have.same.ordered.members(t)};assert.notSameOrderedMembers=function(e,t,s){new Assertion(e,s,assert.notSameOrderedMembers,true).to.not.have.same.ordered.members(t)};assert.sameDeepOrderedMembers=function(e,t,s){new Assertion(e,s,assert.sameDeepOrderedMembers,true).to.have.same.deep.ordered.members(t)};assert.notSameDeepOrderedMembers=function(e,t,s){new Assertion(e,s,assert.notSameDeepOrderedMembers,true).to.not.have.same.deep.ordered.members(t)};assert.includeMembers=function(e,t,s){new Assertion(e,s,assert.includeMembers,true).to.include.members(t)};assert.notIncludeMembers=function(e,t,s){new Assertion(e,s,assert.notIncludeMembers,true).to.not.include.members(t)};assert.includeDeepMembers=function(e,t,s){new Assertion(e,s,assert.includeDeepMembers,true).to.include.deep.members(t)};assert.notIncludeDeepMembers=function(e,t,s){new Assertion(e,s,assert.notIncludeDeepMembers,true).to.not.include.deep.members(t)};assert.includeOrderedMembers=function(e,t,s){new Assertion(e,s,assert.includeOrderedMembers,true).to.include.ordered.members(t)};assert.notIncludeOrderedMembers=function(e,t,s){new Assertion(e,s,assert.notIncludeOrderedMembers,true).to.not.include.ordered.members(t)};assert.includeDeepOrderedMembers=function(e,t,s){new Assertion(e,s,assert.includeDeepOrderedMembers,true).to.include.deep.ordered.members(t)};assert.notIncludeDeepOrderedMembers=function(e,t,s){new Assertion(e,s,assert.notIncludeDeepOrderedMembers,true).to.not.include.deep.ordered.members(t)};assert.oneOf=function(e,t,s){new Assertion(e,s,assert.oneOf,true).to.be.oneOf(t)};assert.changes=function(e,t,s,r){if(arguments.length===3&&typeof t==="function"){r=s;s=null}new Assertion(e,r,assert.changes,true).to.change(t,s)};assert.changesBy=function(e,t,s,r,n){if(arguments.length===4&&typeof t==="function"){var o=r;r=s;n=o}else if(arguments.length===3){r=s;s=null}new Assertion(e,n,assert.changesBy,true).to.change(t,s).by(r)};assert.doesNotChange=function(e,t,s,r){if(arguments.length===3&&typeof t==="function"){r=s;s=null}return new Assertion(e,r,assert.doesNotChange,true).to.not.change(t,s)};assert.changesButNotBy=function(e,t,s,r,n){if(arguments.length===4&&typeof t==="function"){var o=r;r=s;n=o}else if(arguments.length===3){r=s;s=null}new Assertion(e,n,assert.changesButNotBy,true).to.change(t,s).but.not.by(r)};assert.increases=function(e,t,s,r){if(arguments.length===3&&typeof t==="function"){r=s;s=null}return new Assertion(e,r,assert.increases,true).to.increase(t,s)};assert.increasesBy=function(e,t,s,r,n){if(arguments.length===4&&typeof t==="function"){var o=r;r=s;n=o}else if(arguments.length===3){r=s;s=null}new Assertion(e,n,assert.increasesBy,true).to.increase(t,s).by(r)};assert.doesNotIncrease=function(e,t,s,r){if(arguments.length===3&&typeof t==="function"){r=s;s=null}return new Assertion(e,r,assert.doesNotIncrease,true).to.not.increase(t,s)};assert.increasesButNotBy=function(e,t,s,r,n){if(arguments.length===4&&typeof t==="function"){var o=r;r=s;n=o}else if(arguments.length===3){r=s;s=null}new Assertion(e,n,assert.increasesButNotBy,true).to.increase(t,s).but.not.by(r)};assert.decreases=function(e,t,s,r){if(arguments.length===3&&typeof t==="function"){r=s;s=null}return new Assertion(e,r,assert.decreases,true).to.decrease(t,s)};assert.decreasesBy=function(e,t,s,r,n){if(arguments.length===4&&typeof t==="function"){var o=r;r=s;n=o}else if(arguments.length===3){r=s;s=null}new Assertion(e,n,assert.decreasesBy,true).to.decrease(t,s).by(r)};assert.doesNotDecrease=function(e,t,s,r){if(arguments.length===3&&typeof t==="function"){r=s;s=null}return new Assertion(e,r,assert.doesNotDecrease,true).to.not.decrease(t,s)};assert.doesNotDecreaseBy=function(e,t,s,r,n){if(arguments.length===4&&typeof t==="function"){var o=r;r=s;n=o}else if(arguments.length===3){r=s;s=null}return new Assertion(e,n,assert.doesNotDecreaseBy,true).to.not.decrease(t,s).by(r)};assert.decreasesButNotBy=function(e,t,s,r,n){if(arguments.length===4&&typeof t==="function"){var o=r;r=s;n=o}else if(arguments.length===3){r=s;s=null}new Assertion(e,n,assert.decreasesButNotBy,true).to.decrease(t,s).but.not.by(r)};assert.ifError=function(e){if(e)throw e};assert.isExtensible=function(e,t){new Assertion(e,t,assert.isExtensible,true).to.be.extensible};assert.isNotExtensible=function(e,t){new Assertion(e,t,assert.isNotExtensible,true).to.not.be.extensible};assert.isSealed=function(e,t){new Assertion(e,t,assert.isSealed,true).to.be.sealed};assert.isNotSealed=function(e,t){new Assertion(e,t,assert.isNotSealed,true).to.not.be.sealed};assert.isFrozen=function(e,t){new Assertion(e,t,assert.isFrozen,true).to.be.frozen};assert.isNotFrozen=function(e,t){new Assertion(e,t,assert.isNotFrozen,true).to.not.be.frozen};assert.isEmpty=function(e,t){new Assertion(e,t,assert.isEmpty,true).to.be.empty};assert.isNotEmpty=function(e,t){new Assertion(e,t,assert.isNotEmpty,true).to.not.be.empty};__name((function alias(e,t){assert[t]=assert[e];return alias}),"alias")("isOk","ok")("isNotOk","notOk")("throws","throw")("throws","Throw")("isExtensible","extensible")("isNotExtensible","notExtensible")("isSealed","sealed")("isNotSealed","notSealed")("isFrozen","frozen")("isNotFrozen","notFrozen")("isEmpty","empty")("isNotEmpty","notEmpty");var G=[];function use(e){const t={AssertionError:a,util:r,config:j,expect:expect,assert:assert,Assertion:Assertion,...F};if(!~G.indexOf(e)){e(t,r);G.push(e)}return t}__name(use,"use");
/*!
 * Assertion Constructor
 *
 * Creates object for chaining.
 *
 * `Assertion` objects contain metadata in the form of flags. Three flags can
 * be assigned during instantiation by passing arguments to this constructor:
 *
 * - `object`: This flag contains the target of the assertion. For example, in
 *   the assertion `expect(numKittens).to.equal(7);`, the `object` flag will
 *   contain `numKittens` so that the `equal` assertion can reference it when
 *   needed.
 *
 * - `message`: This flag contains an optional custom error message to be
 *   prepended to the error message that's generated by the assertion when it
 *   fails.
 *
 * - `ssfi`: This flag stands for "start stack function indicator". It
 *   contains a function reference that serves as the starting point for
 *   removing frames from the stack trace of the error that's created by the
 *   assertion when it fails. The goal is to provide a cleaner stack trace to
 *   end users by removing Chai's internal functions. Note that it only works
 *   in environments that support `Error.captureStackTrace`, and only when
 *   `Chai.config.includeStack` hasn't been set to `false`.
 *
 * - `lockSsfi`: This flag controls whether or not the given `ssfi` flag
 *   should retain its current value, even as assertions are chained off of
 *   this object. This is usually set to `true` when creating a new assertion
 *   from within another assertion. It's also temporarily set to `true` before
 *   an overwritten assertion gets called by the overwriting assertion.
 *
 * @param {Mixed} obj target of the assertion
 * @param {String} msg (optional) custom error message
 * @param {Function} ssfi (optional) starting point for removing stack frames
 * @param {Boolean} lockSsfi (optional) whether or not the ssfi flag is locked
 * @api private
 */
/*!
 * ### .ifError(object)
 *
 * Asserts if value is not a false value, and throws if it is a true value.
 * This is added to allow for chai to be a drop-in replacement for Node's
 * assert class.
 *
 *     var err = new Error('I am a custom error');
 *     assert.ifError(err); // Rethrows err!
 *
 * @name ifError
 * @param {Object} object
 * @namespace Assert
 * @api public
 */
/*! Bundled license information:

deep-eql/index.js:
  (*!
   * deep-eql
   * Copyright(c) 2013 Jake Luer <jake@alogicalparadox.com>
   * MIT Licensed
   *)
  (*!
   * Check to see if the MemoizeMap has recorded a result of the two operands
   *
   * @param {Mixed} leftHandOperand
   * @param {Mixed} rightHandOperand
   * @param {MemoizeMap} memoizeMap
   * @returns {Boolean|null} result
  *)
  (*!
   * Set the result of the equality into the MemoizeMap
   *
   * @param {Mixed} leftHandOperand
   * @param {Mixed} rightHandOperand
   * @param {MemoizeMap} memoizeMap
   * @param {Boolean} result
  *)
  (*!
   * Primary Export
   *)
  (*!
   * The main logic of the `deepEqual` function.
   *
   * @param {Mixed} leftHandOperand
   * @param {Mixed} rightHandOperand
   * @param {Object} [options] (optional) Additional options
   * @param {Array} [options.comparator] (optional) Override default algorithm, determining custom equality.
   * @param {Array} [options.memoize] (optional) Provide a custom memoization object which will cache the results of
      complex objects for a speed boost. By passing `false` you can disable memoization, but this will cause circular
      references to blow the stack.
   * @return {Boolean} equal match
  *)
  (*!
   * Compare two Regular Expressions for equality.
   *
   * @param {RegExp} leftHandOperand
   * @param {RegExp} rightHandOperand
   * @return {Boolean} result
   *)
  (*!
   * Compare two Sets/Maps for equality. Faster than other equality functions.
   *
   * @param {Set} leftHandOperand
   * @param {Set} rightHandOperand
   * @param {Object} [options] (Optional)
   * @return {Boolean} result
   *)
  (*!
   * Simple equality for flat iterable objects such as Arrays, TypedArrays or Node.js buffers.
   *
   * @param {Iterable} leftHandOperand
   * @param {Iterable} rightHandOperand
   * @param {Object} [options] (Optional)
   * @return {Boolean} result
   *)
  (*!
   * Simple equality for generator objects such as those returned by generator functions.
   *
   * @param {Iterable} leftHandOperand
   * @param {Iterable} rightHandOperand
   * @param {Object} [options] (Optional)
   * @return {Boolean} result
   *)
  (*!
   * Determine if the given object has an @@iterator function.
   *
   * @param {Object} target
   * @return {Boolean} `true` if the object has an @@iterator function.
   *)
  (*!
   * Gets all iterator entries from the given Object. If the Object has no @@iterator function, returns an empty array.
   * This will consume the iterator - which could have side effects depending on the @@iterator implementation.
   *
   * @param {Object} target
   * @returns {Array} an array of entries from the @@iterator function
   *)
  (*!
   * Gets all entries from a Generator. This will consume the generator - which could have side effects.
   *
   * @param {Generator} target
   * @returns {Array} an array of entries from the Generator.
   *)
  (*!
   * Gets all own and inherited enumerable keys from a target.
   *
   * @param {Object} target
   * @returns {Array} an array of own and inherited enumerable keys from the target.
   *)
  (*!
   * Determines if two objects have matching values, given a set of keys. Defers to deepEqual for the equality check of
   * each key. If any value of the given key is not equal, the function will return false (early).
   *
   * @param {Mixed} leftHandOperand
   * @param {Mixed} rightHandOperand
   * @param {Array} keys An array of keys to compare the values of leftHandOperand and rightHandOperand against
   * @param {Object} [options] (Optional)
   * @return {Boolean} result
   *)
  (*!
   * Recursively check the equality of two Objects. Once basic sameness has been established it will defer to `deepEqual`
   * for each enumerable key in the object.
   *
   * @param {Mixed} leftHandOperand
   * @param {Mixed} rightHandOperand
   * @param {Object} [options] (Optional)
   * @return {Boolean} result
   *)
  (*!
   * Returns true if the argument is a primitive.
   *
   * This intentionally returns true for all objects that can be compared by reference,
   * including functions and symbols.
   *
   * @param {Mixed} value
   * @return {Boolean} result
   *)
*/export{Assertion,a as AssertionError,V as Should,assert,j as config,expect,_ as should,use,r as util};

